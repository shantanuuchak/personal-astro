---
import { Star } from "phosphor-react";
import type { Link } from "../utils/types";

interface Props {
  links: Link[];
}

const { links } = Astro.props;
---

<nav class="top-nav">
  <ul>
    {
      links.map((link, index) => {
        if (index === links.length - 1)
          return (
            <li>
              <a href={link.url} class="button" tabindex="4">
                <span class="button__text">{link.heading}</span>
                <span class="button__icon-container">
                  <span class="button__icon-fill">
                    <Star weight="fill" className="button__icon" size="65%" />
                  </span>
                </span>
              </a>
            </li>
          );
        return (
          <li>
            <a href={link.url} tabindex="4">
              {link.heading}
            </a>
          </li>
        );
      })
    }
  </ul>
</nav>

<style is:global>
  .top-nav ul {
    display: flex;
    gap: var(--gap);
    align-items: stretch;
    height: 100%;
  }

  .top-nav li {
    height: 100%;
    display: flex;
    align-items: stretch;
  }

  nav.top-nav a:is(:link, :visited) {
    color: var(--c2dark);
    display: flex;
    align-items: center;
    transition: transform 0.2s;
  }

  nav.top-nav a:is(:hover),
  .header .lang-link:is(:hover) {
    transform: translateY(-0.4rem);
  }
  nav.top-nav a:is(:active),
  .header .lang-link:is(:active) {
    transform: translateY(0);
  }

  .sticky nav.top-nav ul a.button {
    border: var(--border-width) solid var(--c5);
    color: var(--c8);
    box-shadow: none;
    background: var(--c8);
  }
  .sticky nav.top-nav ul a.button .button__text {
    background: var(--white);
  }
  .sticky .top-nav .button__icon-container {
    background: var(--c5);
  }

  nav.top-nav ul a.button {
    color: var(--c6dark);
    font-weight: 500;
    font-size: var(--font-normal);
  }

  .top-nav .button__icon-container {
    background: var(--c6);
  }

  @media only screen and (max-width: 56em /* 896px */) {
    .mobile .top-nav {
      position: absolute;
      right: var(--side-padding);
      top: calc(100% + var(--side-padding) / 4);
      z-index: 999;
      visibility: hidden;
      opacity: 0;
      transform: scale(0.9);
      transform-origin: top right;
      transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
    }

    .mobile .top-nav ul {
      flex-direction: column;
      border-radius: var(--radius-default);
      border-top-right-radius: 0;
      background: rgb(var(--whiteRGB) / 0.95);
      padding: var(--space-16);
      backdrop-filter: blur(4px);
      align-items: stretch;
      box-shadow: var(--shadow-default);
    }

    .mobile .top-nav ul a:where(:link, :visited) {
      width: 100%;
    }

    nav.top-nav ul a.button {
      border: var(--border-width) solid var(--c6);
      color: var(--c6dark);
      box-shadow: var(--border-width) solid var(--c6);
      background: var(--c6);
    }

    nav.top-nav ul a.button .button__text {
      background: var(--white);
    }

    .top-nav .button__icon-container {
      background: var(--c6);
    }
  }

  @media only screen and (max-width: 32.25em /* 516px */) {
    nav.top-nav a:is(:link, :visited) {
      font-size: var(--font-large);
    }

    nav.top-nav ul a.button {
      font-size: var(--font-base);
    }
  }
</style>
