---
import { Picture } from "@astrojs/image/components";

import { GitHub } from "../../utils/technologies.astro";
import { ArrowFatRight, Books, Coins, User } from "phosphor-react";

import type { Project } from "../../data/projects";
import type { LanguageSelectionType } from "@utils/types";
import CourseInfo from "./CourseInfo.astro";
import TechList from "./TechList.astro";

interface Props {
  project: Project;
  lang: LanguageSelectionType;
}

const {
  project: {
    title,
    subtitle,
    type,
    image,
    technologies,
    link,
    source,
    description,
    size,
    mobile,
    course,
    color,
    year,
  },
  lang,
} = Astro.props;

const isEn = lang === "en";

interface ProjectType {
  text: string;
  color: string;
  bg: string;
}

let projectType: Partial<ProjectType> = {};

const commercialText = isEn ? "Commercial project" : "Projekt komercyjny";
const personalText = isEn ? "Personal project" : "Projekt personalny";
const courseText = isEn ? "Course project" : "Projekt w ramach kursu";
const sourceText = isEn ? "Source code" : "Pokaż kod";
const visitText = isEn ? "Visit website" : "Odwiedź stronę";

if (type === "commercial")
  projectType = {
    text: commercialText,
    color: "",
    bg: "",
  } as ProjectType;

if (type === "personal")
  projectType = {
    text: personalText,
    color: "",
    bg: "",
  } as ProjectType;

if (type === "course")
  projectType = {
    text: courseText,
    color: "",
    bg: "",
  } as ProjectType;

const isMedium = size === "medium";
const isSmall = size === "small";
const isLarge = size === "large";
---

<script>
  const imgs = document.querySelectorAll<HTMLImageElement>(".project__img");
  if (imgs) {
    imgs.forEach((img) => {
      img.onload = () => {
        img.closest(".tablet__screen")!.classList.remove("loading");
      };
    });
  }
</script>

<li
  class:list={[
    "project",
    { "project--medium": isMedium },
    { "project--small": isSmall },
    { "project--large": isLarge },
  ]}>
  <div class="header">
    <div class="project__info">
      <p class="project__type">
        <time datetime={String(year)}>{year}</time><span
          >{projectType.text}</span
        >
      </p>
      <div class="project__type-icon-container">
        {
          type === "commercial" && (
            <Coins
              size="100%"
              weight="duotone"
              className="project__type-icon"
            />
          )
        }
        {
          type === "personal" && (
            <User size="100%" weight="duotone" className="project__type-icon" />
          )
        }
        {
          type === "course" && (
            <Books
              size="100%"
              weight="duotone"
              className="project__type-icon"
            />
          )
        }
      </div>
    </div>
    <hgroup>
      <h3 class="title">{title}</h3>
      <p class="subtitle">
        {subtitle[lang]}
      </p>
    </hgroup>
  </div>
  <div class="description">
    <span class="shape"></span>
    <p>{description ? description[lang] : ""}</p>
    {type === "course" && <CourseInfo isEn={isEn} course={course!} />}
  </div>
  <div class="bg"></div>
  <div class="buttons">
    {
      link && (
        <a href={link.url} hreflang={link.lang} class="button">
          <span class="button__text">{visitText}</span>
          <span class="button__icon-container">
            <span class="button__icon-fill">
              <ArrowFatRight
                size="70%"
                weight="fill"
                className="button__icon"
              />
            </span>
          </span>
        </a>
      )
    }
    {
      source && (
        <a href={source} hreflang="en" class="button">
          <span class="button__text">{sourceText}</span>
          <span class="button__icon-container">
            <span class="button__icon-fill">
              <GitHub.icon size="70%" className="button__icon" title="GitHub" />
            </span>
          </span>
        </a>
      )
    }
  </div>
  <div class="tablet">
    <div class="tablet__screen loading">
      {
        image?.full && size === "large" && (
          <>
            <Picture
              src={`/img${image.full}`}
              alt={`${title} - ${
                lang === "en" ? "Screenshot" : "Zrzut ekranu"
              }`}
              sizes="650px"
              widths={[1950, 1300, 650]}
              formats={["webp"]}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
              class="project__img"
            />
          </>
        )
      }
      {
        image?.full && size === "small" && (
          <>
            <Picture
              src={`/img${image.full}`}
              alt={`${title} - ${
                lang === "en" ? "Screenshot" : "Zrzut ekranu"
              }`}
              sizes="350px"
              widths={[1050, 700, 350]}
              formats={["webp"]}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
              class="project__img"
              draggable="false"
            />
          </>
        )
      }
    </div>
  </div>
  <TechList size={size} technologies={technologies} />
  {
    mobile && size !== "small" && (
      <div class="phone">
        <div class="phone__screen">
          {image?.mobile && (
            <Picture
              src={`/img${image.mobile}`}
              alt={`${title} - ${
                lang === "en" ? "Mobile Version" : "Wersja mobilna"
              }`}
              sizes="220px"
              widths={[760, 440, 220]}
              formats={["webp"]}
              aspectRatio="1:2"
              loading="lazy"
              decoding="async"
              class="project__img-mobile"
            />
          )}
        </div>
      </div>
    )
  }
</li>

<style define:vars={{ h: color.h, s: color.s, l: color.l }}>
  .project {
    grid-column: span 6;
    display: grid;
    grid-template-columns: repeat(14, 1fr);
    grid-template-rows: repeat(4, min-content) 1fr;
    border-radius: var(--radius-default);
    position: relative;
    margin-top: var(--space-64);
  }
  .project--medium {
    grid-column: span 4;
  }
  .project--small {
    scroll-snap-align: start;
    flex: 0 0 40rem;
    margin: 0;
    padding-bottom: var(--space-32);
  }
  .project--small:first-of-type {
    margin-left: var(--side-padding);
  }
  .project--small:last-of-type {
    margin-right: var(--side-padding);
  }

  .header {
    grid-column: 3 / -3;
    grid-row: 1 / 2;
    color: var(--c11dark);
    margin-bottom: var(--space-24);
  }
  .project--medium .header,
  .project--small .header {
    margin-bottom: var(--space-12);
  }
  .project--small .header {
    grid-column: 2 / -2;
    margin-bottom: var(--space-4);
  }

  .project__info {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    margin-top: 5.8rem;
  }
  .project--medium .project__info {
    margin-top: 4rem;
  }
  .project--small .project__info {
    margin-top: var(--space-32);
  }

  .project__type-icon-container {
    height: var(--space-64);
    aspect-ratio: 1/1;
    color: var(--c11dark);
    line-height: 1;
    padding: var(--space-12);
    border-radius: var(--radius-s);
    grid-column: 3 / 4;
    justify-self: end;
    border: var(--border-width) solid var(--c6light);
  }
  .project--small .project__type-icon-container {
    height: var(--space-48);
    padding: var(--space-8);
  }

  .title {
    letter-spacing: var(--letter-spacing-3);
    font-weight: 800;
    font-size: var(--font-4);
  }
  .project--medium .title,
  .project--small .title {
    font-size: var(--font-5);
    letter-spacing: var(--letter-spacing-4);
  }

  .subtitle {
    font-size: var(--font-large);
    color: var(--c11dark);
  }
  .project--medium .subtitle,
  .project--small .subtitle {
    font-size: var(--font-base);
  }

  time {
    display: block;
    font-size: var(--font-large);
    font-weight: 600;
    color: var(--c11dark);
    line-height: 1;
    margin-bottom: var(--space-8);
  }
  .project--medium time,
  .project--small time {
    font-size: var(--font-base);
  }

  .project__type {
    grid-column: 1 / 3;
    text-transform: uppercase;
  }
  .project__type span {
    font-size: var(--font-normal);
    font-weight: 600;
    letter-spacing: 0;
    color: var(--c8dark);
    display: flex;
    line-height: var(--line-very-tight);
  }
  .project--medium .project__type span,
  .project--small .project__type span {
    font-size: var(--font-small);
    letter-spacing: 0;
  }

  .description {
    grid-column: 3 / -3;
    grid-row: 4 / 5;
    color: var(--c11darker);
    margin-top: var(--space-32);
  }
  .project--medium .description,
  .project--small .description {
    margin-top: var(--space-24);
    margin-bottom: calc(var(--space-8) * -1);
  }
  .project--small .description {
    grid-column: 2 / -2;
    margin-bottom: calc(var(--space-12) * -1);
  }

  .shape {
    float: right;
    width: 20%;
    padding-bottom: 6%;
  }
  .project--small .shape {
    display: none;
  }

  .phone {
    grid-column: 11 / 15;
    grid-row: 2 / -1;
    align-self: start;

    background-color: var(--white);

    --padding: var(--space-4);
    --border: var(--space-8);
    --phone-radius: var(--radius-default);
    border-radius: calc(var(--border) + var(--phone-radius));
    padding: var(--padding);
    margin-top: var(--space-64);
    box-shadow: var(--shadow-default);
    z-index: 5;
    position: relative;
  }
  .project--medium .phone {
    --phone-radius: var(--radius-small);
    --border: var(--space-4);
    --padding: 0.2rem;
  }
  .project--small .phone {
    display: none;
  }

  .phone__screen {
    overflow: hidden;
    border-radius: calc(var(--phone-radius) + var(--space-4));
  }

  .project__img-mobile {
    width: 100%;
    aspect-ratio: 1/2;
  }

  .tablet__screen {
    border-radius: var(--radius-default);
    overflow: hidden;
    position: relative;
  }

  .tablet__screen.loading::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to top left,
      hsl(var(--h) 50% 50%),
      hsl(var(--h) 70% 70%)
    );
    z-index: 1;
    border-radius: calc(var(--radius-default) + 0.1rem);
    animation: pulse 0.5s ease-in-out infinite alternate both;
  }

  @keyframes pulse {
    from {
      filter: contrast(100%);
    }
    to {
      filter: contrast(25%);
    }
  }

  .tablet {
    grid-column: 1 / 13;
    grid-row: 2 / 3;
    border-radius: calc(var(--space-8) + var(--radius-default));
    overflow: hidden;
    padding: var(--space-8);
    background: var(--white);
    box-shadow: 0 0 5px rgb(var(--blackRGB) / 0.2);
  }

  .project--small .tablet {
    grid-column: 2 / -2;
    border-left: none;
    border-right: none;
  }

  .project__img {
    width: 100%;
    aspect-ratio: 16/9;

    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    color: transparent;
    z-index: 2;
    position: relative;
    border-radius: var(--radius-default);
  }

  .bg {
    grid-column: 2 / -2;
    grid-row: 1 / -1;
    border-radius: var(--radius-default);
    background: var(--white);
    box-shadow: var(--shadow-card);
    z-index: -1;
  }
  .project--small .bg {
    grid-column: 1 / -1;
  }

  .buttons {
    grid-column: 3 / -3;
    grid-row: 5 / 6;
    display: flex;
    justify-content: flex-start;
    align-self: end;
    gap: var(--space-12);
    transform: translateY(50%);
  }
  .project--small .buttons {
    grid-column: 2 / -2;
  }

  .button {
    font-size: var(--font-small);
    color: var(--c11dark);
    box-shadow: var(--shadow-button), 0 0 0 var(--border-width) var(--c6light);
  }

  .button__icon-container {
    background: var(--c11dark);
  }

  .button:nth-of-type(2) {
    color: var(--c8);
  }

  .button:nth-of-type(2) .button__icon-container {
    background: var(--c8);
  }

  @media only screen and (max-width: 25em /* 400px */) {
    .project--large .bg {
      grid-column: 1 / -1;
    }

    .project--large .description {
      grid-column: 1 / -1;
      padding: 0 var(--space-32);
      margin-bottom: -1.2rem;
    }

    .project--large .buttons {
      grid-column: 1 / -1;
      padding: 0 var(--space-32);
    }

    .project--large .header {
      grid-column: 1 / -1;
      padding: 0 var(--space-32);
      margin-bottom: var(--space-12);
    }

    .project--large .project__info {
      margin-top: var(--space-48);
    }

    .project--large .tablet {
      transform-origin: bottom right;
      transform: scale(102%);
    }

    .project--large .phone {
      transform-origin: bottom left;
      transform: scale(105%);
    }
  }

  @media only screen and (max-width: 20em /* 320px */) {
    .buttons {
      transform: translateY(0);
      flex-direction: column;
      margin-bottom: var(--space-24);
      margin-top: var(--space-12);
    }

    .button {
      height: 4.8rem;
      box-shadow: none;
      border: var(--border-width) solid currentColor;
      justify-content: space-between;
    }

    .project--small {
      flex: 0 0 35rem;
    }
  }
</style>
